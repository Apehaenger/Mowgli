; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:GD32F303/STM32F030]
platform = ststm32
board = disco_f051r8

framework = stm32cube
extra_scripts = post:firmware_bin.py
upload_flags = -c set CPUTAPID 0x2ba01477
board_build.flash_mode = stlink
upload_protocol = stlink


[env:STM32F030R8T6-Picoprobe]
platform = ststm32
board = disco_f030r8
framework = stm32cube

; Picoprobe (RP2040) cmsis-dap SWD
;
; If you get "Error: unable to find CMSIS-DAP device",
; you probably need some OpenOCD udev rules. See https://forgge.github.io/theCore/guides/running-openocd-without-sudo.html
upload_protocol = cmsis-dap

; If you still get "Error: unable to find CMSIS-DAP device",
; PlatformIO's? packed openocd within "tool-openocd" might be to old.
; Mine was 0.10.0+dev... which was to old.
; Simply install openocd from your distribution (>= 0.11.0-rc2 seem to work) and uncommonet upload_flags and upload_command
upload_flags =
  -s
  ${platformio.packages_dir}/tool-openocd/scripts
  -f
  interface/cmsis-dap.cfg
  -c
  adapter speed 10000; transport select swd
  -f
  target/stm32f0x.cfg
; Adapt path to your distribution openocd "which openocd"
upload_command = /usr/bin/openocd $UPLOAD_FLAGS -c "init; reset halt; stm32f0x unlock 0; reset run" -c "program {$SOURCE} verify reset; shutdown;"

debug_tool = cmsis-dap
